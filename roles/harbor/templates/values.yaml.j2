expose:
  imagePullPolicy: IfNotPresent
  type: ingress
  tls:
    enabled: true
{% if dsc.ingress.tls.type == 'tlsSecret' %}
    certSource: secret
    secret:
      secretName: {{ dsc.ingress.tls.tlsSecret.name }}
      notarySecretName: {{ dsc.ingress.tls.tlsSecret.name }}-notary
{% else %}
    certSource: secret
    secret:
      secretName: harbor-ingress
      notarySecretName: harbor-ingress-notary
{% endif %}
  ingress:
    hosts:
      core: {{ harbor_domain }}
      notary: {{ dsc.harbor.subDomain }}-notary{{ root_domain }}
    notary:
      annotations:
{% for key, val in dsc.ingress.annotations.items() %}
        {{ key }}: {{ val }}
{% endfor %}
      labels:
{% for key, val in dsc.ingress.labels.items() %}
        {{ key }}: {{ val }}
{% endfor %}
    harbor:
      annotations:
{% for key, val in dsc.ingress.annotations.items() %}
        {{ key }}: {{ val }}
{% endfor %}
      labels:
{% for key, val in dsc.ingress.labels.items() %}
        {{ key }}: {{ val }}
{% endfor %}
externalURL: https://{{ harbor_domain }}
persistence:
  enabled: true
  resourcePolicy: keep
harborAdminPassword: "{{ dsc.harbor.adminPassword }}"
{% if dsc.proxy.enabled %}
proxy:
  httpProxy: {{ dsc.proxy.http_proxy }}
  httpsProxy: {{ dsc.proxy.https_proxy }}
  noProxy: {{ dsc.proxy.no_proxy }},.local,.internal
  components:
    - nginx
    - portal
    - core
    - jobservice
    - registry
    - trivy
    - database
    - redis
    - exporter
{% endif %}
nginx:
  serviceAccountName: harbor-sa
  image:
    repository: docker.io/goharbor/nginx-photon
portal:
  serviceAccountName: harbor-sa
  image:
    repository: docker.io/goharbor/harbor-portal
core:
  serviceAccountName: harbor-sa
  image:
    repository: docker.io/goharbor/harbor-core
jobservice:
  serviceAccountName: harbor-sa
  image:
    repository: docker.io/goharbor/harbor-jobservice
registry:
  serviceAccountName: harbor-sa
  registry:
    image:
      repository: docker.io/goharbor/registry-photon
  controller:
    image:
      repository: docker.io/goharbor/harbor-registryctl
trivy:
  serviceAccountName: harbor-sa
  image:
    repository: docker.io/goharbor/trivy-adapter-photon
notary:
  server:
    serviceAccountName: harbor-sa
  signer:
    serviceAccountName: harbor-sa
database:
  internal:
    serviceAccountName: harbor-sa
    image:
      repository: docker.io/goharbor/harbor-db
redis:
  internal:
    serviceAccountName: harbor-sa
    image:
      repository: docker.io/goharbor/redis-photon
exporter:
  image:
    repository: docker.io/goharbor/harbor-exporter
