- name: Get argo client secret
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ DSC.keycloak.namespace }}"
    name: keycloak-client-secret-argo-client
  register: argocd_secret
  failed_when: argocd_secret.resources | length == 0

- name: Argo crb
  kubernetes.core.k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        creationTimestamp: null
        name: system:openshift:scc:privileged
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:openshift:scc:privileged
      subjects:
        - kind: ServiceAccount
          namespace: "{{ DSC.argocd.namespace }}"
          name: argo-argo-cd-argocd-repo-server
        - kind: ServiceAccount
          namespace: "{{ DSC.argocd.namespace }}"
          name: argo-argo-cd-argocd-server
        - kind: ServiceAccount
          namespace: "{{ DSC.argocd.namespace }}"
          name: argo-redis

- name: Add helm repo
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami

- name: Set extra env vars
  ansible.builtin.set_fact:
    argo_values: "{{ lookup('template', 'values.yaml.j2') | from_yaml }}"

- name: Deploy helm
  kubernetes.core.helm:
    name: argo
    chart_ref: bitnami/argo-cd
    release_namespace: "{{ DSC.argocd.namespace }}"
    create_namespace: true
    values: "{{ argo_values }}"

- name: Find gitlab token in inventory
  kubernetes.core.k8s_info:
    namespace: "{{ DSC.console.namespace }}"
    kind: ConfigMap
    name: dso-config
  register: ansible_inventory

- name: Create global gitlab secret
  kubernetes.core.k8s:
    definition:
      data:
        password: "{{ ansible_inventory.resources[0].data.GITLAB_TOKEN | b64encode }}"
        url: "{{ ('https://' + ([GITLAB_DOMAIN, DSC.global.projectsRootDir] | flatten | join ('/') )) | b64encode }}"
        username: "{{ 'root' | b64encode }}"
      kind: Secret
      metadata:
        labels:
          argocd.argoproj.io/secret-type: repo-creds
        name: gitlab
        namespace: "{{ DSC.argocd.namespace }}"
      type: Opaque

- name: Install routes
  kubernetes.core.k8s:
    template: "{{ item }}"
  with_items:
    - ingress.yaml.j2
