- name: Apply project
  kubernetes.core.k8s:
    template: project.j2

- name: Get console client secret
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ KEYCLOAK_NAMESPACE }}"
    name: keycloak-client-secret-console-frontend-client
  register: console_frontend_secret
  failed_when: console_frontend_secret.resources | length == 0

- name: Get console client secret
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ KEYCLOAK_NAMESPACE }}"
    name: keycloak-client-secret-console-backend-client
  register: console_backend_secret
  failed_when: console_backend_secret.resources | length == 0

- name: Get old app.yaml
  kubernetes.core.k8s_info:
    kind: Application
    namespace: "{{ ARGOCD_NAMESPACE }}"
    name: console-pi-native
  register: console_app

- name: Generate new values (first deployment)
  ansible.builtin.set_fact:
    session_secret: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters') }}"
  when: console_app.resources | length == 0

- name: set bundle-ca cm
  kubernetes.core.k8s:
    name: bundle
    namespace: "{{ CONSOLE_NAMESPACE }}"
    kind: ConfigMap
    api_version: v1
    definition:
      data:
        ca.pem: |
          {{ exposed_ca_pem }}
  when: exposed_ca.type != 'none'

- name: Apply app
  kubernetes.core.k8s:
    template: app.yaml.j2
