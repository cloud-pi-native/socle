---
- name: Reset Keycloak admin password
  hosts: localhost
  gather_facts: false
  tasks:

    - name:
      ansible.builtin.set_fact:
        keycloak_reset_password: true

    - name: Import socle-config role
      ansible.builtin.import_role:
        name: "{{ playbook_dir}}/../roles/socle-config"

    - name: Check socle_config_custom and exit if empty
      when: (dsc_cr is defined) and (socle_config_custom.resources | length == 0)
      block:
        - name: Warning message
          ansible.builtin.debug:
            msg:
              - "Attention ! Vous avez lancé le playbook avec l'option '-e dsc_cr={{ dsc_cr }}'"
              - "mais la ressource dsc nommée '{{ dsc_cr }}' est vide ou inexistante côté cluster !"
              - ""
              - "Vérifiez que vous ne vous êtes pas trompé de nom et que la ressource existe bien, via la commande suivante :"
              - ""
              - " kubectl get dsc {{ dsc_cr }} "
              - ""
              - "Si elle n'est pas trouvée (not found), listez simplement les ressources dsc actuellement déclarées :"
              - ""
              - " kubectl get dsc "
              - ""
              - "Puis relancez le playbook avec une ressource dsc existante."
              - ""
              - "Rappel : le présent playbook lancé seul, sans extra vars, utilisera la configuration dsc par défaut (conf-dso)."
              - "Il réinitialisera donc le mot de passe de l'administrateur Keycloak du namespace associé."

    - name: Get Keycloak pods
      kubernetes.core.k8s_info:
        namespace: "{{ dsc.keycloak.namespace }}"
        kind: Pod
        label_selectors:
          - app.kubernetes.io/name=keycloak
      register: kc_pods

    - name: Set kc_pod fact
      ansible.builtin.set_fact:
        kc_pod: "{{ kc_pods.resources[0].metadata.name }}"

    - name: Set tmp_adm_pass fact
      ansible.builtin.set_fact:
        tmp_adm_pass: "{{ lookup('password', '/dev/null length=24 chars=ascii_letters,digits') }}"

    - name: Set kc_adm_pass fact
      ansible.builtin.set_fact:
        kc_adm_pass: "{{ lookup('password', '/dev/null length=24 chars=ascii_letters,digits') }}"

    - name: Create temporary admin user
      kubernetes.core.k8s_exec:
        pod: "{{ kc_pod }}"
        namespace: "{{ dsc.keycloak.namespace }}"
        command: >
          bash -c "JAVA_OPTS_APPEND='-Djgroups.dns.query=keycloak-headless.{{ dsc.keycloak.namespace }}.svc.cluster.local -Djgroups.bind.port=7900';
          export PASS_VAR='{{ tmp_adm_pass }}';
          kc.sh bootstrap-admin user --username tmpadm --password:env PASS_VAR"
      register: tmp_adm

    - name: Update dsoadmin user
      community.general.keycloak_user:
        validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
        auth_client_id: admin-cli
        auth_keycloak_url: https://{{ dsc.keycloak.subDomain }}{{ dsc.global.rootDomain }}
        auth_realm: master
        auth_username: tmpadm
        auth_password: "{{ tmp_adm_pass }}"
        state: present
        realm: master
        credentials:
          - temporary: false
            type: password
            value: "{{ kc_adm_pass }}"
        username: dsoadmin
        first_name: Admin
        last_name: Admin
        email: admin@example.com
        enabled: true
        email_verified: true
        groups:
          - name: admin
            state: present
        force: true

    - name: Update keycloak secret
      kubernetes.core.k8s:
        kind: Secret
        name: keycloak
        namespace: "{{ dsc.keycloak.namespace }}"
        state: patched
        definition:
          data:
            admin-password: "{{ kc_adm_pass | b64encode }}"

    - name: Update console inventory
      kubernetes.core.k8s:
        kind: Secret
        name: dso-config
        namespace: "{{ dsc.console.namespace }}"
        state: patched
        definition:
          data:
            KEYCLOAK_ADMIN_PASSWORD: "{{ kc_adm_pass | b64encode }}"

    - name: Remove temporary admin from master realm
      community.general.keycloak_user:
        validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
        auth_client_id: admin-cli
        auth_keycloak_url: https://{{ dsc.keycloak.subDomain }}{{ dsc.global.rootDomain }}
        auth_realm: master
        auth_username: dsoadmin
        auth_password: "{{ kc_adm_pass }}"
        state: absent
        realm: master
        username: tmpadm

    - name: Update new password in infra-vault
      when: dsc.global.gitOps.deploymentEnabled
      block:
        - name: Load variables for the vault-secrets post-install role
          ansible.builtin.include_vars:
            file: "{{ playbook_dir}}/../roles/gitops/vault-secrets/vars/keycloak-admin-password.yaml"

        - name: Post-install vault-secrets run
          ansible.builtin.import_role:
            name: "{{ playbook_dir}}/../roles/gitops/vault-secrets"

    - name: Get DSO Console server deployment
      kubernetes.core.k8s_info:
        kind: Deployment
        namespace: "{{ dsc.console.namespace }}"
        label_selectors:
          - app.kubernetes.io/name=cpn-console-server
      register: console_server_deploy

    - name: Set console_server_deploy_name fact
      when: console_server_deploy.resources | length > 0
      ansible.builtin.set_fact:
        console_server_deploy_name: "{{ console_server_deploy.resources[0].metadata.name }}"

    - name: Restart DSO Console server deployment
      when: console_server_deploy.resources | length > 0
      kubernetes.core.k8s:
        kind: Deployment
        name: "{{ console_server_deploy_name }}"
        namespace: "{{ dsc.console.namespace }}"
        definition:
          spec:
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/restartedAt: "{{ now(fmt='%Y-%m-%dT%H:%M:%SZ') }}"
        state: patched
      register: console_server_restart

    - name: Info message
      block:
        - name: Keycloak admin password changed
          when: not console_server_restart is changed
          ansible.builtin.debug:
            msg:
              - "Réinitialisation du mot de passe administrateur de l'instancce Keycloak suivante effectué :"
              - "    URL : https://{{ dsc.keycloak.subDomain }}{{ dsc.global.rootDomain }}"
              - "    Namespace : {{ dsc.keycloak.namespace }}"
              - ""
              - "Nouveaux identifiants :"
              - "    Utilisateur : dsoadmin "
              - "    Mot de passe : {{ kc_adm_pass }} "
        - name: Keycloak admin password changed and Console server restarted
          when: console_server_restart is changed
          ansible.builtin.debug:
            msg:
              - "Réinitialisation du mot de passe administrateur de l'instancce Keycloak suivante effectué :"
              - "    URL : https://{{ dsc.keycloak.subDomain }}{{ dsc.global.rootDomain }}"
              - "    Namespace : {{ dsc.keycloak.namespace }}"
              - ""
              - "Nouveaux identifiants :"
              - "    Utilisateur : dsoadmin "
              - "    Mot de passe : {{ kc_adm_pass }} "
              - ""
              - "Le deployment {{ console_server_deploy_name }} a été redémarré dans le namespace {{ dsc.console.namespace }}."
