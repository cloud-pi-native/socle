---
- name: Inject config under raft if ha
  when: dsc.global.metrics.enabled and vault_values.vault.server.ha.raft.enabled
  ansible.builtin.blockinfile:
    path: "{{ gitops_local_repo }}/{{ dsc.global.gitOps.repo.path }}/envs/{{ item.0.name }}/apps/{{ item.1.argocd_app }}/values.yaml"
    insertafter: '^      raft:\s*$'
    block: "{{ values.vault.raft_standalone_config | indent(8, true) }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: config"

- name: Inject config under standalone
  when: dsc.global.metrics.enabled and vault_values.vault.server.standalone.enabled
  ansible.builtin.blockinfile:
    path: "{{ gitops_local_repo }}/{{ dsc.global.gitOps.repo.path }}/envs/{{ item.0.name }}/apps/{{ item.1.argocd_app }}/values.yaml"
    insertafter: '^    standalone:\s*$'
    block: "{{ values.vault.raft_standalone_config | indent(6, true) }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: config"

- name: Conditionally add metrics and/or alerts enabled rules
  ansible.builtin.set_fact:
    values: >-
      {{
        values | combine({
          'vault': values.vault | combine({
            'serverTelemetry':
              values.vault.serverTelemetry
              + (values.vault.metrics_enabled_rules | indent(6, true) if dsc.global.metrics.enabled else '')
              + (values.vault.alerts_enabled_rules | indent(6, true) if dsc.global.alerting.enabled else '')
          })
        }, recursive=True)
      }}

- name: Inject serverTelemetry under vault
  when: dsc.global.metrics.enabled
  ansible.builtin.blockinfile:
    path: "{{ gitops_local_repo }}/{{ dsc.global.gitOps.repo.path }}/envs/{{ item.0.name }}/apps/{{ item.1.argocd_app }}/values.yaml"
    insertafter: '^vault:\s*$'
    block: "{{ values.vault.serverTelemetry | indent(2, true) }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK: serverTelemetry"
