- name: no exposed_ca
  when: DSC.exposedCA.type == 'none'
  set_fact:
    exposed_ca_pem: ""

- name: exposed_ca (configmap)
  when: DSC.exposedCA.type == 'configmap'
  block:
    - name: get configMap
      kubernetes.core.k8s_info:
        name: "{{ DSC.exposedCA.configmap.name }}"
        namespace: "{{ DSC.exposedCA.configmap.namespace }}"
        kind: ConfigMap
      register: exposed_ca_resource

    - name: extract key
      set_fact:
        exposed_ca_pem: "{{ exposed_ca_resource.resources[0].data[DSC.exposedCA.configmap.key] }}"

- name: exposed_ca (secret)
  when: DSC.exposedCA.type == 'secret'
  block:
    - name: get secret
      kubernetes.core.k8s_info:
        name: "{{ DSC.exposedCA.configmap.name }}"
        namespace: "{{ DSC.exposedCA.configmap.namespace }}"
        kind: Secret
      register: exposed_ca_resource

    - name: extract key
      set_fact:
        exposed_ca_pem: "{{ exposed_ca_resource.resources[0].data[DSC.exposedCA.configmap.key] | b64decode }}"

- name: exposed_ca (certmanager)
  when: DSC.exposedCA.type == 'certmanager'
  block:
    - name: get certmanager secret
      kubernetes.core.k8s_info:
        name: "{{ DSC.ingress.tls.ca.secretName }}"
        namespace: "cert-manager"
        kind: Secret
      register: exposed_ca_resource

    - name: extract key
      set_fact:
        exposed_ca_pem: "{{ exposed_ca_resource.resources[0].data['tls.crt'] | b64decode }}"

- name: exposed_ca (url)
  when: DSC.exposedCA.type == 'url'
  block:
    - name: get url
      ansible.builtin.shell:
        cmd: "curl {{ DSC.exposedCA.url }} -s | openssl x509"
      changed_when: false
      register: exposed_ca_resource
      tags: ['skip_ansible_lint']

    - name: extract key
      set_fact:
        exposed_ca_pem: "{{ exposed_ca_resource.stdout }}"
