---
- name: Get credentials
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Display tags list
      ansible.builtin.debug:
        msg:
          - "List of available tags for convenience"
          - "(Can also be retrieved with the --list-tags option on ansible-playbook run) :"
          - ""
          - "keycloak"
          - "nexus"
          - "sonar (or sonarqube)"
          - "gitlab"
          - "vault"
          - "sops"
          - "argo (or argocd)"
          - "harbor"
          - "console (or console-pi)"
      tags:
        - always

    - name: Get socle config
      kubernetes.core.k8s_info:
        kind: ConfigMap
        namespace: cluster-infra
        name: socle-config
      register: socle_config
      tags:
        - always

    - name: Save vars locally and temporally
      ansible.builtin.copy:
        dest: vars.yaml
        content: "{{ socle_config.resources[0].data.vars | from_yaml | to_nice_yaml }}"
        mode: "0400"
      tags:
        - always

    - name: Load vars
      ansible.builtin.include_vars:
        file: vars.yaml
      tags:
        - always

    - name: Get dso-config configmap
      kubernetes.core.k8s_info:
        namespace: "{{ CONSOLE_NAMESPACE }}"
        kind: ConfigMap
        name: dso-config
      register: dso_configmap
      tags:
        - always

    - name: Get Keycloak DSO user credentials
      kubernetes.core.k8s_info:
        namespace: "{{ KEYCLOAK_NAMESPACE }}"
        kind: Secret
        name: credential-dso-adminexample.com-{{ KEYCLOAK_NAMESPACE }}
      register: keycloak_user_creds
      tags:
        - gitlab
        - argo
        - argocd
        - console
        - console-pi

    - name: Set Keycloak DSO user facts
      ansible.builtin.set_fact:
        keycloak_user: "{{ keycloak_user_creds.resources[0].data.username | b64decode }}"
        keycloak_user_password: "{{ keycloak_user_creds.resources[0].data.password | b64decode }}"
      tags:
        - gitlab
        - argo
        - argocd
        - console
        - console-pi

    - name: Display Keycloak credentials
      ansible.builtin.debug:
        msg:
          - "URL : {{ dso_configmap.resources[0].data.KEYCLOAK_URL }} "
          - "Admin username : {{ dso_configmap.resources[0].data.KEYCLOAK_ADMIN }} "
          - "Admin password : {{ dso_configmap.resources[0].data.KEYCLOAK_ADMIN_PASSWORD }} "
      tags:
        - keycloak

    - name: Display Nexus credentials
      ansible.builtin.debug:
        msg:
          - "URL: {{ dso_configmap.resources[0].data.NEXUS_URL }} "
          - "Admin username: {{ dso_configmap.resources[0].data.NEXUS_ADMIN }} "
          - "Admin password: {{ dso_configmap.resources[0].data.NEXUS_ADMIN_PASSWORD }} "
      tags:
        - nexus

    - name: Display Sonarqube URL and API token
      ansible.builtin.debug:
        msg:
          - "URL: {{ dso_configmap.resources[0].data.SONARQUBE_URL }} "
          - "API token: {{ dso_configmap.resources[0].data.SONAR_API_TOKEN }} "
      tags:
        - sonar
        - sonarqube

    - name: Display Gitlab URL, credentials and API token
      ansible.builtin.debug:
        msg:
          - "URL: {{ dso_configmap.resources[0].data.GITLAB_URL }} "
          - "Admin username: {{ keycloak_user }} "
          - "Admin password: {{ keycloak_user_password }} "
          - "API token: {{ dso_configmap.resources[0].data.GITLAB_TOKEN }} "
      tags:
        - gitlab

    - name: Get Vault unseal keys and root token
      kubernetes.core.k8s_info:
        namespace: "{{ VAULT_NAMESPACE }}"
        kind: Secret
        name: vault-keys
      register: vault_keys
      tags:
        - vault

    - name: Display Vault URL, root token and unseal keys
      ansible.builtin.debug:
        msg:
          - "URL: {{ dso_configmap.resources[0].data.VAULT_URL }} "
          - "root_token: {{ vault_keys.resources[0].data.root_token | b64decode }} "
          - "key1: {{ vault_keys.resources[0].data.key1 | b64decode }} "
          - "key2: {{ vault_keys.resources[0].data.key2 | b64decode }} "
          - "key3: {{ vault_keys.resources[0].data.key3 | b64decode }} "
      tags:
        - vault

    - name: Get SOPS age keys secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: sops-age-key-file
        namespace: "{{ SOPS_NAMESPACE }}"
      register: sops_age_keys
      tags:
        - sops

    - name: Display SOPS age keys
      ansible.builtin.debug:
        msg:
          - "{{ sops_age_keys.resources[0].data['keys'] | b64decode | split('\n') }}"
      tags:
        - sops

    - name: Display Argo CD URL and credentials
      ansible.builtin.debug:
        msg:
          - "URL: {{ dso_configmap.resources[0].data.ARGOCD_URL }} "
          - "Admin username: {{ keycloak_user }} "
          - "Admin password: {{ keycloak_user_password }} "
      tags:
        - argo
        - argocd

    - name: Display Harbor URL and credentials
      ansible.builtin.debug:
        msg:
          - "URL: {{ dso_configmap.resources[0].data.HARBOR_URL }} "
          - "Admin username: {{ dso_configmap.resources[0].data.HARBOR_ADMIN }} "
          - "Admin password: {{ dso_configmap.resources[0].data.HARBOR_ADMIN_PASSWORD }} "
      tags:
        - harbor

    - name: Get Console Pi Native ingress
      kubernetes.core.k8s_info:
        namespace: "{{ CONSOLE_NAMESPACE }}"
        kind: Ingress
        api_version: networking.k8s.io/v1
        name: console-pi-native-client-ingress
      register: console_pi_ingress
      tags:
        - console
        - console-pi

    - name: Display Console Pi Native URL and credentials
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ console_pi_ingress.resources[0].spec.rules[0].host }} "
          - "Admin username: {{ keycloak_user }} "
          - "Admin password: {{ keycloak_user_password }} "
      tags:
        - console
        - console-pi
