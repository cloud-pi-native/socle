certmanager:
  install: true

registry:
  enabled: false

nginx-ingress:
  enabled: false

gitlab:
  webservice:
    registry:
      enabled: false
{% if dsc.global.metrics.enabled %}
    metrics:
      serviceMonitor:
        enabled: true
{% endif %}
  sidekiq:
    registry:
      enabled: false
{% if dsc.global.metrics.enabled %}
    metrics:
      podMonitor:
        enabled: true
{% endif %}
  unicorn:
    registry:
      enabled: false
  gitaly:
{% if dsc.global.metrics.enabled %}
    metrics:
      serviceMonitor:
        enabled: true
{% endif %}
    persistence:
      size: {{ dsc.gitlab.pvcGitalySize }}
  gitlab-exporter:
{% if dsc.global.metrics.enabled %}
    metrics:
      serviceMonitor:
        enabled: true
{% endif %}
  kas:
    enabled: false
{% if dsc.global.metrics.enabled %}
    metrics:
      serviceMonitor:
        enabled: true
{% endif %}

global:
  registry:
    enabled: false
  certificates:
    customCAs:
      - configMap: openshift-service-ca.crt
{% for item in dsc.additionalsCA %}
{% if item.kind == 'ConfigMap' %}
      - configMap: {{ item.name }}
{% endif %}
{% if item.kind == 'Secret' %}
      - secret: {{ item.name }}
{% endif %}
{% endfor %}
{% if dsc.exposedCA.type != 'none' %}
      - secret: exposed-ca
{% endif %}
  hosts:
    domain: {{ dsc.global.rootDomain[1:] }}
    registry:
      name: gitlab-registry.example.com
    minio:
      name: {{ dsc_name }}-minio{{ dsc.global.rootDomain }}
    kas:
      name: {{ dsc_name }}-kas{{ dsc.global.rootDomain }}
{% if gitlab_domain %}
    gitlab:
      name: {{ gitlab_domain }}
{% endif %}

  appConfig:
    defaultProjectsFeatures:
      containerRegistry: false
    ldap:
      preventSignin: true
    omniauth:
      enabled: true
      syncProfileAttributes: ["email"]
      allowSingleSignOn: ["openid_connect"]
      blockAutoCreatedUsers: false
      autoSignInWithProvider: "openid_connect"
      autoLinkLdapUser: false
      autoLinkSamlUser: false
      autoLinkUser: ["openid_connect"]
      providers:
        - secret: openid-connect

prometheus:
  install: false

{% if dsc.global.backup.velero.enabled %}
postgresql:
  primary:
    podAnnotations:
      pre.hook.backup.velero.io/command: '["/bin/bash", "-c", "PGPASSWORD=$POSTGRES_POSTGRES_PASSWORD pg_dump -Fc  -U postgres -d gitlabhq_production  > /bitnami/postgresql/data/app.dump"]'
{% endif %}