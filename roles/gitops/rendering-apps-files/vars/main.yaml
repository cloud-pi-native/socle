values:
  argocd:
    configs: |
      rbac:
        scopes: "[groups]"
        policy.default: role:nada
        admin.enabled: "false"
        policy.csv: |
          p, role:admin, *, *, */*, allow
          p, role:nada, applicationsets, *, */*, deny
          p, role:nada, applications, *, */*, deny
          p, role:nada, logs, get, */*, allow
          p, role:nada, exec, *, */*, deny
          p, role:nada, certificates, *, *, deny
          p, role:nada, accounts, *, *, deny
          p, role:nada, gpgkeys, *, *, deny
          p, role:nada, projects, *, *, deny
          p, role:nada, clusters, *, *, deny
          p, role:nada, repositories, get, *, allow
          g, system:cluster-admins, role:admin
          g, cluster-admins, role:admin
          g, /admin, role:admin
          g, admin, role:admin

    cm: |
      resource.exclusions: |
        - apiGroups:
          - tekton.dev
          clusters:
          - '*'
          kinds:
          - TaskRun
          - PipelineRun
        - apiGroups:
          - wgpolicyk8s.io
          - aquasecurity.github.io
          clusters:
          - '*'
          kinds:
          - '*'
        - apiGroups:
          - postgresql.cnpg.io
          clusters:
          - '*'
          kinds:
          - Backup
        - apiGroups:
          - reports.kyverno.io
          clusters:
          - '*'
          kinds:
          - EphemeralReport
        - apiGroups:
          - reports.kyverno.io/v1
          clusters:
          - '*'
          kinds:
          - EphemeralReport
      oidc.config: |
        issuer: https://<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#domain | jsonPath {.keycloak}>/realms/{{ dsc.keycloak.applicationRealm }}
        requestedScopes: ["openid", "generic"]
        name: Keycloak
        clientID: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/keycloak/values#client | jsonPath {.argo.id}>
        clientSecret: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/keycloak/values#client | jsonPath {.argo.secret}>

    rootCA_block: |
      rootCA: |
        <path:{{ vaultinfra_kv_name }}/data/env/conf-dso/apps/global/values#exposedCa | indent 2>

    controller_metrics: |
      metrics:
        enabled: {{ dsc.global.metrics.enabled | lower }}
        serviceMonitor:
          enabled: {{ dsc.global.metrics.enabled | lower }}
          namespace: {{ dsc.argocd.namespace }}

    controller_metrics_labels: |
      labels: {{ dsc.global.metrics.additionalLabels | default('') }}

  vault:
    raft_standalone_config: |
      config: |
        ui = true
        service_registration "kubernetes" {}
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          telemetry {
            unauthenticated_metrics_access = "false"
          }
        }
        storage "raft" {
          path = "/vault/data"
        }
        telemetry {
          prometheus_retention_time = "12h"
          disable_hostname = true
        }

    serverTelemetry: |
      serverTelemetry:
        serviceMonitor:
          enabled: {{ (dsc.global.metrics.enabled or dsc.global.alerting.enabled) | lower }}
          authorization:
            credentials:
              name: {{ dsc_name }}-vault-keys
              key: root_token
          selectors: {{ dsc.global.metrics.additionalLabels | default ('{}', true) }}
