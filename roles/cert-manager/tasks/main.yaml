---
- name: Get cluster infos
  kubernetes.core.k8s_cluster_info:
  register: cluster_infos

- name: Check if cert-manager api exists
  ansible.builtin.set_fact:
    cm_api: "{{ cluster_infos.apis['cert-manager.io/v1'] | default('absent') }}"

- name: Check if cert-manager-webhook exists
  kubernetes.core.k8s_info:
    kind: MutatingWebhookConfiguration
    name: cert-manager-webhook
  register: cm_mwhc

- name: Install cert-manager
  when: (cm_api == 'absent') or (cm_mwhc.resources | length == 0)
  block:
    - name: Add cert-manager helm repo
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "{{ dsc.certmanager.helmRepoUrl }}"
        force_update: true

    # Installation des CRDs indépendamment du chart helm.
    # Recommandé en production.
    # Voir : https://cert-manager.io/docs/installation/helm
    - name: Download cert-manager CRDs
      ansible.builtin.uri:
        url: https://github.com/cert-manager/cert-manager/releases/download/{{ dsc.certmanager.chartVersion }}/cert-manager.crds.yaml
        return_content: true
      register: cert_manager_crds

    - name: Apply CRDs
      kubernetes.core.k8s:
        state: present
        definition: "{{ cert_manager_crds.content | from_yaml_all }}"

    - name: Set path fact
      ansible.builtin.set_fact:
        path: "{{ role_path + '/templates/values' }}"

    - name: Compute Cert-manager Helm values
      ansible.builtin.include_role:
        name: combine
      vars:
        combine_path: "{{ path }}"
        combine_dest_var: "cm_values"

    - name: Deploy helm
      kubernetes.core.helm:
        #    force: true
        name: cert-manager
        chart_ref: jetstack/cert-manager
        chart_version: "{{ dsc.certmanager.chartVersion }}"
        release_namespace: cert-manager
        create_namespace: true
        values: "{{ cm_values }}"

    - name: Wait cert-manager to initialize
      kubernetes.core.k8s_info:
        kind: Endpoints
        namespace: cert-manager
        name: cert-manager-webhook
      register: endpoint
      until: endpoint.resources[0].subsets[0].addresses[0] is defined
      retries: 15
      delay: 5

- name: Create Let's Encrypt ClusterIssuer
  kubernetes.core.k8s:
    state: present
    template: cluster-issuer-acme.j2
  when: dsc.ingress.tls.type == 'acme'

- name: Create CA ClusterIssuer
  kubernetes.core.k8s:
    state: present
    template: cluster-issuer-ca.j2
  when: dsc.ingress.tls.type == 'ca'
