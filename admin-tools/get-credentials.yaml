---
- name: Get credentials
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Display tags list
      ansible.builtin.debug:
        msg:
          - "List of available tags for convenience"
          - "(Can also be retrieved with the --list-tags option on ansible-playbook run) :"
          - ""
          - "keycloak"
          - "nexus"
          - "sonar (or sonarqube)"
          - "gitlab"
          - "vault"
          - "sops"
          - "argo (or argocd)"
          - "harbor"
          - "console (or console-dso)"
      tags:
        - always

    - name: "Get socle config from conf-dso dsc (default)"
      kubernetes.core.k8s_info:
        kind: dsc
        name: conf-dso
        api_version: cloud-pi-native.fr/v1alpha
      register: socle_config
      tags:
        - always

    - name: Get socle config from dsc_cr extra var when defined
      when: dsc_cr is defined
      kubernetes.core.k8s_info:
        kind: dsc
        name: "{{ dsc_cr }}"
        api_version: cloud-pi-native.fr/v1alpha
      register: socle_config_custom
      tags:
        - always

    - name: Check socle_config_custom and exit if empty
      when: (dsc_cr is defined) and (socle_config_custom.resources | length == 0)
      tags:
        - always
      block:
        - name: Warning message
          ansible.builtin.debug:
            msg:
              - "Attention ! Vous avez lancé le playbook avec l'option '-e dsc_cr={{ dsc_cr }}'"
              - "mais la ressource dsc nommée '{{ dsc_cr }}' est vide ou inexistante côté cluster !"
              - ""
              - "Vérifiez que vous ne vous êtes pas trompé de nom et que la ressource existe bien, via la commande suivante :"
              - ""
              - " kubectl get dsc {{ dsc_cr }} "
              - ""
              - "Si elle n'est pas trouvée (not found), listez simplement les resources dsc actuellement déclarées :"
              - ""
              - " kubectl get dsc "
              - ""
              - "Puis relancez le playbook avec une resource dsc existante."
              - ""
              - "Rappel : le présent playbook lancé seul, sans extra vars, founira les credentials associés à la configuration dsc par défaut (conf-dso)"

        - name: Exit playbook
          ansible.builtin.meta: end_play

    - name: Set socle_config fact when dsc_cr defined and not empty
      ansible.builtin.set_fact:
        socle_config: "{{ socle_config_custom }}"
      when: (socle_config_custom is not skipped) and (socle_config_custom.resources | length > 0)
      tags:
        - always

    - name: Set DSC Name fact
      ansible.builtin.set_fact:
        dsc_name: "{{ socle_config.resources[0].metadata.name }}"
      tags:
        - always

    - name: Set DSC fact
      ansible.builtin.set_fact:
        dsc: "{{ socle_config.resources[0].spec }}"
      tags:
        - always

    - name: Get DSO config ConfigMap from DSO console namespace
      kubernetes.core.k8s_info:
        kind: ConfigMap
        name: dso-config
        namespace: "{{ dsc.console.namespace }}"
      register: dso_console_configmap
      tags:
        - always

    - name: Get Keycloak DSO user credentials
      kubernetes.core.k8s_info:
        namespace: "{{ dsc.keycloak.namespace }}"
        kind: Secret
        name: dso-admin-user-secret
      register: keycloak_user_creds
      tags:
        - gitlab
        - argo
        - argocd

    - name: Set Keycloak DSO user facts
      ansible.builtin.set_fact:
        keycloak_user: "{{ keycloak_user_creds.resources[0].data.ADMIN_USER | b64decode }}"
        keycloak_user_password: "{{ keycloak_user_creds.resources[0].data.ADMIN_USER_PASSWORD | b64decode }}"
      tags:
        - gitlab
        - argo
        - argocd

    - name: Display Keycloak credentials
      ansible.builtin.debug:
        msg:
          - "URL : https://{{ dsc.keycloak.subDomain }}{{ dsc.global.rootDomain }} "
          - "Admin DSO username : {{ keycloak_user }} "
          - "Admin DSO password : {{ keycloak_user_password }} "
          - "Admin Master username: {{ dso_console_configmap.resources[0].data.KEYCLOAK_ADMIN }} "
          - "Admin Master password: {{ dso_console_configmap.resources[0].data.KEYCLOAK_ADMIN_PASSWORD }} "
      tags:
        - keycloak

    - name: Display Nexus credentials
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ dsc.nexus.subDomain }}{{ dsc.global.rootDomain }} "
          - "Admin username: {{ dso_console_configmap.resources[0].data.NEXUS_ADMIN }} "
          - "Admin password: {{ dso_console_configmap.resources[0].data.NEXUS_ADMIN_PASSWORD }} "
      tags:
        - nexus

    - name: Get SonarQube admin password
      kubernetes.core.k8s_info:
        namespace: "{{ dsc.sonarqube.namespace }}"
        kind: Secret
        name: sonarqube
      register: sonarqube_admin_creds
      tags:
        - sonar
        - sonarqube

    - name: Display Sonarqube URL and API token
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ dsc.sonarqube.subDomain }}{{ dsc.global.rootDomain }} }} "
          - "API token: {{ dso_console_configmap.resources[0].data.SONAR_API_TOKEN }} "
          - "Admin username: admin "
          - "Admin password: {{ sonarqube_admin_creds.resources[0].data.password | b64decode }} "
      tags:
        - sonar
        - sonarqube

    - name: Display Gitlab URL, credentials and API token
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ dsc.gitlab.subDomain }}{{ dsc.global.rootDomain }} "
          - "Admin username: {{ keycloak_user }} "
          - "Admin password: {{ keycloak_user_password }} "
          - "API token: {{ dso_console_configmap.resources[0].data.GITLAB_TOKEN }} "
      tags:
        - gitlab

    - name: Get Vault unseal keys and root token
      kubernetes.core.k8s_info:
        namespace: "{{ dsc.vault.namespace }}"
        kind: Secret
        name: "{{ dsc_name }}-vault-keys"
      register: vault_keys
      tags:
        - vault

    - name: Display Vault URL, root token and unseal keys
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ dsc.vault.subDomain }}{{ dsc.global.rootDomain }} "
          - "root_token: {{ vault_keys.resources[0].data.root_token | b64decode }} "
          - "key1: {{ vault_keys.resources[0].data.key1 | b64decode }} "
          - "key2: {{ vault_keys.resources[0].data.key2 | b64decode }} "
          - "key3: {{ vault_keys.resources[0].data.key3 | b64decode }} "
      tags:
        - vault

    - name: Get SOPS age keys secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: sops-age-key-file
        namespace: "{{ dsc.sops.namespace }}"
      register: sops_age_keys
      tags:
        - sops

    - name: Display SOPS age keys
      ansible.builtin.debug:
        msg:
          - "{{ sops_age_keys.resources[0].data['keys']|b64decode | split('\n') }}"
      tags:
        - sops

    - name: Display Argo CD URL and credentials
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ dsc.argocd.subDomain }}{{ dsc.global.rootDomain }} }} "
          - "Admin username: {{ keycloak_user }} "
          - "Admin password: {{ keycloak_user_password }} "
      tags:
        - argo
        - argocd

    - name: Display Harbor URL and credentials for login with local DB
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ dsc.harbor.subDomain }}{{ dsc.global.rootDomain }}"
          - "Admin username: {{ dso_console_configmap.resources[0].data.HARBOR_ADMIN }} "
          - "Admin password: {{ dso_console_configmap.resources[0].data.HARBOR_ADMIN_PASSWORD }} "
      tags:
        - harbor

    - name: Get Console Pi Native ingress
      kubernetes.core.k8s_info:
        namespace: "{{ dsc.console.namespace }}"
        kind: Ingress
        api_version: networking.k8s.io/v1
        name: console-pi-native-ingress
      register: console_pi_ingress
      tags:
        - console
        - console-dso

    - name: Display Console Pi Native URL
      ansible.builtin.debug:
        msg:
          - "URL: https://{{ console_pi_ingress.resources[0].spec.rules[0].host }} "
          - "Please create a personal account into Keycloak."
          - "Then use it for connecting to Console Pi Native."
      tags:
        - console
        - console-dso
