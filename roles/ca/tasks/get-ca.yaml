- name: Get CA cert
  kubernetes.core.k8s_info:
    namespace: default
    kind: "{{ kind }}"
    name: "{{ name }}"
  register: ca_cert

- name: Set ca fact (cm)
  ansible.builtin.set_fact:
    additionals_ca_pem_array: "{{ additionals_ca_pem_array + [ca_cert.resources[0].data[key]] }}"
  when: kind == 'ConfigMap' and key | length != 0

- name: Set ca fact (secret)
  ansible.builtin.set_fact:
    additionals_ca_pem_array: "{{ additionals_ca_pem_array + [( ca_cert.resources[0].data[key] | b64decode )] }}"
  when: kind == 'Secret' and key | length != 0

- name: Set ca fact (cm)
  ansible.builtin.set_fact:
    additionals_ca_pem_array: "{{ additionals_ca_pem_array + [ca_cert.resources[0].data[resKey.key]] }}"
  loop: "{{ ca_cert.resources[0].data | dict2items }}"
  when: kind == 'ConfigMap' and key | length == 0
  loop_control:
    loop_var: resKey

- name: Set ca fact (secret)
  ansible.builtin.set_fact:
    additionals_ca_pem_array: "{{ additionals_ca_pem_array + [( ca_cert.resources[0].data[resKey.key] | b64decode )] }}"
  loop: "{{ ca_cert.resources[0].data | dict2items }}"
  when: kind == 'Secret' and key | length == 0
  loop_control:
    loop_var: resKey
