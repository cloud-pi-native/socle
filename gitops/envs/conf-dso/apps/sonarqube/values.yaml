cpn-cnpg:
  backup:
    compression: gzip
    destinationPath: <path:forge-dso/data/env/conf-dso/apps/common/values#externalClusters
      | jsonPath {.pgCluster.barmanObjectStore.destinationPath}>
    enabled: true
    endpointURL: <path:forge-dso/data/env/conf-dso/apps/common/values#externalClusters
      | jsonPath {.pgCluster.barmanObjectStore.endpointURL}>
    retentionPolicy: 14d
    s3Credentials:
      accessKeyId:
        key: accessKeyId
        value: <path:forge-dso/data/env/conf-dso/apps/common/values#externalClusters
          | jsonPath {.pgCluster.barmanObjectStore.s3Credentials.accessKeyId.value}>
      create: true
      secretAccessKey:
        key: secretAccessKey
        value: <path:forge-dso/data/env/conf-dso/apps/common/values#externalClusters
          | jsonPath {.pgCluster.barmanObjectStore.s3Credentials.secretAccessKey.value}>
      secretName: pg-cluster-backup
  dbName: sonardb
  imageName: <path:forge-dso/data/env/conf-dso/apps/common/values#image | jsonPath
    {.repository.ghcr}>/cloudnative-pg/postgresql:16.1
  monitoring:
    enabled: false
  nameOverride: pg-cluster-sonar
  parameters:
    max_slot_wal_keep_size: 49GB
    max_worker_processes: '60'
  pvcSize:
    data: 50Gi
    wal: 50Gi
  username: dsoadmin
sonarqube:
  account:
    adminPasswordSecretName: sonarqube
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      runAsUser: 101
  adminJobAnnotations: {}
  curlContainerImage: <path:forge-dso/data/env/conf-dso/apps/common/values#image |
    jsonPath {.repository.docker}>/curlimages/curl:8.11.0
  fullnameOverride: sonarqube-sonarqube
  image:
    pullPolicy: IfNotPresent
    repository: <path:forge-dso/data/env/conf-dso/apps/common/values#image | jsonPath
      {.repository.docker}>/sonarqube
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/proxy-body-size: 64m
    enabled: true
    hosts:
    - name: <path:forge-dso/data/env/conf-dso/apps/common/values#domain | jsonPath
        {.sonarqube}>
      path: /
      pathType: Prefix
    ingressClassName: nginx
    labels:
      app: sonar
    tls:
    - hosts:
      - <path:forge-dso/data/env/conf-dso/apps/common/values#domain | jsonPath {.sonarqube}>
      secretName: sonar-tls-secret
  initFs:
    enabled: true
  initSysctl:
    enabled: true
  jdbcOverwrite:
    enable: true
    jdbcSecretName: pg-cluster-sonar-app
    jdbcSecretPasswordKey: password
    jdbcUrl: jdbc:postgresql://pg-cluster-sonar-rw/sonardb?socketTimeout=1500
    jdbcUsername: dsoadmin
  jvmCeOpts: -javaagent:/opt/sonarqube/extensions/plugins/sonarqube-community-branch-plugin-1.23.0.jar=ce
  jvmOpts: -javaagent:/opt/sonarqube/extensions/plugins/sonarqube-community-branch-plugin-1.23.0.jar=web
  monitoringPasscodeSecretKey: monitoring-password
  monitoringPasscodeSecretName: sonar-monitoring-password
  nameOverride: sonar
  plugins:
    install:
    - https://github.com/vaulttec/sonar-auth-oidc/releases/download/v2.1.1/sonar-auth-oidc-plugin-2.1.1.jar
    - https://github.com/mc1arke/sonarqube-community-branch-plugin/releases/download/1.23.0/sonarqube-community-branch-plugin-1.23.0.jar
    - https://github.com/cnescatlab/sonar-cnes-report/releases/download/5.0.0/sonar-cnes-report-5.0.0.jar
  postgresql:
    enabled: false
  prometheusExporter:
    enabled: false
  prometheusMonitoring:
    podMonitor:
      enabled: false
  replicaCount: 1
  serviceAccount:
    create: true
  sonarProperties:
    sonar.auth.oidc.allowUsersToSignUp: 'true'
    sonar.auth.oidc.autoLogin: 'false'
    sonar.auth.oidc.clientId.secured: <path:forge-dso/data/env/conf-dso/apps/keycloak/values#client
      | jsonPath {.sonar.id}>
    sonar.auth.oidc.clientSecret.secured: <path:forge-dso/data/env/conf-dso/apps/keycloak/values#client
      | jsonPath {.sonar.secret}>
    sonar.auth.oidc.enabled: 'true'
    sonar.auth.oidc.groupsSync: 'true'
    sonar.auth.oidc.groupsSync.claimName: groups
    sonar.auth.oidc.issuerUri: https://<path:forge-dso/data/env/conf-dso/apps/common/values#domain
      | jsonPath {.keycloak}>/realms/dso
    sonar.auth.oidc.loginStrategy: Email
    sonar.auth.oidc.loginStrategy.customClaim.name: upn
    sonar.auth.oidc.scopes: openid generic
    sonar.core.serverBaseURL: https://<path:forge-dso/data/env/conf-dso/apps/common/values#domain
      | jsonPath {.sonarqube}>
    sonar.plugins.risk.consent: ACCEPTED
  sonarWebContext: /
  sonarqubeFolder: /opt/sonarqube
  terminationGracePeriodSeconds: 60
