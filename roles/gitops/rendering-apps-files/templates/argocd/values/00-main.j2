argocd:
  fullnameOverride: "{{ dsc_name }}-argocd"
  crds:
    install: {{ not argo_infra_ownership }} 
    keep: true
{% if dsc.global.platform == "openshift" %}
  openshift:
    enabled: true
{% endif %}
  configs:
{% if dsc.argocd.admin.enabled %}
    secret:
      argocdServerAdminPassword: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/argocd/values#argocdServerAdminPassword>
{% endif %}
    params:
      server.insecure: true
    cm:
{% if instance_name != "conf-dso" %}
      application.instanceLabelKey: argocd.argoproj.io/instance.{{ instance_name }}
{% endif %}
      clusterResources: "true"
      url: "https://<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#domain | jsonPath {.argocd}>"
      users.anonymous.enabled: "false"
      admin.enabled: "{{ dsc.argocd.admin.enabled | lower }}"
      kustomize.buildOptions: "--enable-helm"
{% if dsc.global.environment == 'development' %}
      accounts.cpin-sa: apiKey
{% endif %}
  redis-ha:
    enabled: true
    fullnameOverride: "{{ dsc_name }}-redis-ha"
  controller:
    replicas: 3
  dex:
    enabled: false
  server:
    replicas: 3
    ingress:
      ingressClassName: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#ingressClassName>
    ingressGrpc:
      ingressClassName: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#ingressClassName>
  repoServer:
    replicas: 3
    initContainers:
{% if dsc.global.dockerAccount.enabled %}
    - name: helm-login
      image: quay.io/argoproj/argocd:{{ argo_app_version }}
      command: ["sh", "-c"]
      args:
        - |
          cp /usr/local/bin/helm /helm-custom-binary/helm.bin;
          cat <<'EOF' > /helm-custom-binary/helm
          #!/usr/bin/env bash
          args=($@)
          if [ "$#" -gt 2 ] && [ $1 == "registry" ] && { [ "$2" = "login" ] || [ "$2" = "logout" ]; } && [ $3 == "registry-1.docker.io/bitnamicharts" ]; then
            args[2]="registry-1.docker.io"
          fi
          helm.bin ${args[@]}
          EOF
          chmod +x /helm-custom-binary/helm;
          echo $HELM_PASSWORD | helm registry login -u $HELM_USER registry-1.docker.io --password-stdin;
      volumeMounts:
      - mountPath: /helm-working-dir
        name: helm-working-dir
      - mountPath: /helm-custom-binary
        name: helm-custom-binary
{% if dsc.global.platform != "openshift" %}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 999 
        seccompProfile:
          type: RuntimeDefault
{% endif %}
      env:
      - name: HELM_USER
        valueFrom:
          secretKeyRef:
            name: helm-docker-registry-secret
            key: username
      - name: HELM_PASSWORD
        valueFrom:
          secretKeyRef:
            name: helm-docker-registry-secret
            key: password
      - name: HELM_CACHE_HOME
        value: /helm-working-dir
      - name: HELM_CONFIG_HOME
        value: /helm-working-dir
      - name: HELM_DATA_HOME
        value: /helm-working-dir
{% if dsc.proxy.enabled %}
      - name: HTTP_PROXY
        value: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#proxy | jsonPath {.httpProxy}>
      - name: HTTPS_PROXY
        value: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#proxy | jsonPath {.httpsProxy}>
      - name: NO_PROXY
        value: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#proxy | jsonPath {.noProxy}>,{{ dsc_name }}-argocd-repo-server
{% endif %}
    volumes:
    - name: helm-custom-binary
      emptyDir: {}
    volumeMounts:
    - name: helm-custom-binary
      mountPath: /usr/local/bin/helm
      subPath: helm
    - name: helm-custom-binary
      mountPath: /usr/local/bin/helm.bin
      subPath: helm.bin
{% endif %}
  applicationSet:
    enabled: false
    replicas: 2
    webhook:
      ingress:
        ingressClassName: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#ingressClassName>
  notifications:
    enabled: false
    webhook:
      ingress:
        ingressClassName: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#ingressClassName>
