---
vault_secrets_post_install: false
envs:
  - name: "{{ dsc_name }}"
    apps:
      - argocd_app: "common"
        vault_values:
          image:
            repository:
              docker: "{{ dsc.global.registry | default('docker.io') }}"
              ghcr: "{{ dsc.global.registry | default('ghcr.io') }}"
          domain:
            console: "{{ console_domain }}"
            gitlab: "{{ gitlab_domain }}"
            grafana: "{{ grafana_domain }}"
            harbor: "{{ harbor_domain }}"
            harborNotary: "{{ dsc.harbor.subDomain }}-notary{{ root_domain }}"
            keycloak: "{{ keycloak_domain }}"
            observatorium: "{{ observatorium_domain }}"
            sonarqube: "{{ sonar_domain }}"
            vault: "{{ vault_domain }}"
          proxy:
            httpProxy: "{{ dsc.proxy.http_proxy | default('') }}"
            httpsProxy: "{{ dsc.proxy.https_proxy | default('') }}"
            noProxy: "{{ dsc.proxy.no_proxy | default('') }}"
            hostProxy: "{{ dsc.proxy.host | default('') }}"
            portProxy: "{{ dsc.proxy.port | default('') }}"
          exposedCa: "{{ exposed_ca_pem | default('') }}"
          cnpgS3CaPem: "{{ cnpg_s3_ca_pem | default('') }}"
          ingressClassName: "{{ dsc.ingress.className | default('') }}"
          externalClusters:
            pgCluster:
              barmanObjectStore:
                destinationPath: "s3://{{ dsc.global.backup.s3.bucketName | default('') }}/{{ dsc.global.backup.cnpg.pathPrefix | default('') }}"
                endpointURL: "{{ dsc.global.backup.s3.endpointURL | default('') }}"
                s3Credentials:
                  accessKeyId:
                    value: "{{ dsc.global.backup.s3.credentials.accessKeyId.value | default ('') }}"
                  secretAccessKey:
                    value: "{{ dsc.global.backup.s3.credentials.secretAccessKey.value | default('') }}"
      - argocd_app: "keycloak"
        vault_values:
          auth:
            adminPassword: "{{ lookup('ansible.builtin.password', '/dev/null', length=24, chars=['ascii_letters', 'digits']) }}"
          initcontainers:
            pluginDownloadUrl: "{{ dsc.keycloak.pluginDownloadUrl }}"
      - argocd_app: "observatorium"
        vault_values:
          api:
            loglevel: info
            config:
              id: "prod-infra"
              name: "prod-infra"
          logs:
            enabled: "{{ dsc.global.logs.enabled | default('') }}"
            endpoint: "{{ dsc.global.logs.endpoint | default('') }}"
          metrics:
            enabled: "{{ dsc.global.metrics.enabled | default('') }}"
            endpoint: "{{ dsc.global.metrics.endpoint | default('') }}"
      - argocd_app: "vault"
        vault_values:
          backupSecrets:
            s3BucketName: "{{ dsc.global.backup.s3.bucketName | default('') }}"
            s3BucketPrefix: "{{ dsc.global.backup.vault.pathPrefix | default('') }}"
            s3Endpoint: "{{ dsc.global.backup.s3.endpointURL | default('') }}"
            s3AccessKey: "{{ dsc.global.backup.s3.credentials.accessKeyId.value | default('') }}"
            s3SecretKey: "{{ dsc.global.backup.s3.credentials.secretAccessKey.value | default('') }}"
      - argocd_app: "sonarqube"
        vault_values:
          auth:
            adminPassword: "{{ lookup('ansible.builtin.password', '/dev/null', length=24, chars=['ascii_letters', 'digits']) }}"
            monitoringPassword: "{{ lookup('ansible.builtin.password', '/dev/null', length=24, chars=['ascii_letters', 'digits']) }}"
      - argocd_app: "harbor"
        vault_values:
          global:
            harborAdminPassword: "{{ dsc.harbor.adminPassword | default(lookup('ansible.builtin.password', '/dev/null', length=24, chars=['ascii_letters', 'digits'])) }}"
            s3ImageChartStorage:
              bucket: "{{ dsc.harbor.s3ImageChartStorage.bucket | default('') }}"
              region: "{{ dsc.harbor.s3ImageChartStorage.region | default('') }}"
              regionendpoint: "{{ dsc.harbor.s3ImageChartStorage.regionendpoint | default('') }}"
              accesskey: "{{ dsc.harbor.s3ImageChartStorage.accesskey | default('') }}"
              secretkey: "{{ dsc.harbor.s3ImageChartStorage.secretkey | default('') }}"
          cnpg:
            username: >-
              {{
                (pg_harbor_db_secret.resources[0].data.username | b64decode)
                if not dsc.harbor.cnpg.initPassword
                and pg_harbor_db_secret is defined
                and pg_harbor_db_secret.resources | length > 0
                else 'harbor'
              }}
            password: >-
              {{
                (pg_harbor_db_secret.resources[0].data.password | b64decode)
                if not dsc.harbor.cnpg.initPassword
                and pg_harbor_db_secret is defined
                and pg_harbor_db_secret.resources | length > 0
                else lookup('ansible.builtin.password', '/dev/null', length=24, chars=['ascii_letters', 'digits'])
              }}
