- name: Create nexus Namespace
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        creationTimestamp: null
        name: "{{ DSC.nexus.namespace }}"

- name: Create nexus Service Account
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: nexus-sa
        namespace: "{{ DSC.nexus.namespace }}"

- name: Manage PVC
  include_tasks:
    file: manage-pvc.yaml

- name: Deploy nexus
  kubernetes.core.k8s:
    template: "{{ item }}"
  with_items:
    - nexus.yml.j2
    - ingress.yml.j2

- name: Find nexus admin password in inventory
  kubernetes.core.k8s_info:
    namespace: "{{ DSC.console.namespace }}"
    kind: ConfigMap
    name: dso-config
  register: ansible_inventory

- name: Cache admin password
  ansible.builtin.set_fact:
    nexus_admin_password: "{{ ansible_inventory.resources[0].data.NEXUS_ADMIN_PASSWORD }}"
  register: set_nx_pass
  when: ansible_inventory.resources | length > 0 and ansible_inventory.resources[0].data.NEXUS_ADMIN_PASSWORD is defined

- name: Find password in container
  when: set_nx_pass.skipped is defined and set_nx_pass.skipped
  block:
    - name: Wait nexus to initialize
      kubernetes.core.k8s_info:
        kind: Endpoints
        namespace: "{{ DSC.nexus.namespace }}"
        name: nexus
      register: endpoint
      until: endpoint.resources[0].subsets is defined and endpoint.resources[0].subsets | selectattr('addresses')
      retries: 30
      delay: 5

    - name: Get nexus pod's name
      kubernetes.core.k8s_info:
        kind: Endpoints
        namespace: "{{ DSC.nexus.namespace }}"
        name: nexus
      register: nx_ep

    - name: Set nx_pod
      ansible.builtin.set_fact:
        nx_pod: "{{ nx_ep.resources[0].subsets[0].addresses[0].targetRef.name }}"

    - name: Récupération du compte admin
      kubernetes.core.k8s_exec:
        pod: "{{ nx_pod }}"
        namespace: "{{ DSC.nexus.namespace }}"
        command: cat /nexus-data/admin.password
      register: admin_account
      until: admin_account.stdout is defined and admin_account.stdout
      retries: 15
      delay: 12

    - name: Set nexus password from cat
      ansible.builtin.set_fact:
        nexus_admin_password: "{{ admin_account.stdout }}"

    - name: Generate random password
      ansible.builtin.set_fact:
        new_pass: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters') }}"

    - name: Change nexus password
      ansible.builtin.uri:
        validate_certs: "{{ DSC.exposedCA.type == 'none' }}"
        force_basic_auth: true
        url: "https://{{ NEXUS_DOMAIN }}/service/rest/v1/security/users/admin/change-password"
        method: PUT
        user: admin
        password: "{{ nexus_admin_password }}"
        body: "{{ new_pass }}"
        body_format: raw
        headers:
          Content-Type: text/plain
        status_code: [204, 503]
      until: update_nexus_pass.status == 204
      register: update_nexus_pass
      retries: 10
      delay: 12

    - name: Update inventory
      kubernetes.core.k8s:
        kind: ConfigMap
        name: dso-config
        namespace: "{{ DSC.console.namespace }}"
        state: patched
        definition:
          data:
            NEXUS_ADMIN_PASSWORD: "{{ new_pass }}"

# TODO check tout ça
# - name: Disable Anonymous access
#   uri:
#     url: "https://{{ NEXUS_DOMAIN }}/service/rest/v1/security/anonymous"
#     method: PUT
#     user: admin
#     password:
#     body:
#       enabled: false
#       userId: "anonymous"
#       realmName: "NexusAuthorizingRealm"
#     body_format: json
#     status_code: [200]
