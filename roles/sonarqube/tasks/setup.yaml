- name: Remove permissions for sonar-users
  ansible.builtin.uri:
    url: "https://{{ sonar_domain }}/api/permissions/remove_group?groupName=sonar-users&permission={{ item }}"
    user: "{{ token_pass }}"
    force_basic_auth: true
    validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
    method: post
    status_code: 204
  with_items:
    - scan
    - provisioning

- name: Get Sonar client secret
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ dsc.keycloak.namespace }}"
    name: keycloak-client-secret-sonar-client
  register: sonar_secret
  failed_when: sonar_secret.resources | length == 0

- name: Set settings fact
  set_fact:
    keycloak_secret: "{{ sonar_secret.resources[0].data.CLIENT_SECRET | b64decode }}"
    keycloak_client: "{{ sonar_secret.resources[0].data.CLIENT_ID | b64decode }}"
    sonar_settings:
      sonar.core.serverBaseURL: https://{{ sonar_domain }}
      sonar.plugins.risk.consent: "ACCEPTED"

- name: Get settings
  ansible.builtin.uri:
    url: "https://{{ sonar_domain }}/api/settings/values"
    return_content: true
    user: "{{ token_pass }}"
    validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
    force_basic_auth: true
  register: current_sonar_settings

- name: Filter need update setting
  set_fact:
    to_update_settings: "{{ sonar_settings | settings_filter(current_sonar_settings.json.settings) | to_query_string }}"

- name: Set invalid settings
  ansible.builtin.uri:
    url: "https://{{ sonar_domain }}/api/settings/set?{{ item }}"
    user: "{{ token_pass }}"
    force_basic_auth: true
    method: POST
    validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
    status_code: 204
  with_items: "{{ to_update_settings  }}"

# now install plugin
- name: Install oidc plugin
  ansible.builtin.include_tasks:
    file: plugin.yaml

- name: Get settings
  ansible.builtin.uri:
    url: "https://{{ sonar_domain }}/api/settings/values"
    return_content: true
    user: "{{ token_pass }}"
    validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
    force_basic_auth: true
  register: current_sonar_settings

- name: Set settings fact
  set_fact:
    oidc_settings:
      sonar.auth.oidc.enabled: "true"
      sonar.auth.oidc.allowUsersToSignUp: "true"
      sonar.auth.oidc.autoLogin: "false"
      # sonar.auth.oidc.loginButtonText: "ConnectwithKeycloak"
      sonar.auth.oidc.groupsSync.claimName: "groups"
      sonar.auth.oidc.loginStrategy: "Email"
      sonar.auth.oidc.groupsSync: "true"
      sonar.auth.oidc.scopes: "openid generic"
      sonar.auth.oidc.issuerUri: "https://{{ keycloak_domain }}/realms/dso"
      # TODO upn par d√©faut, voir si besoin de changer
      sonar.auth.oidc.loginStrategy.customClaim.name: "upn"
    oidc_settings_secured:
      - key: sonar.auth.oidc.clientId.secured
        value: "{{ keycloak_client }}"
      - key: sonar.auth.oidc.clientSecret.secured
        value: "{{ keycloak_secret }}"
      # Don't ask me why but issuerUri doesn't appear in current_sonar_settings so we'll force update it
      - key: sonar.auth.oidc.issuerUri
        value: "https://{{ keycloak_domain }}/realms/dso"

- name: Filter oidc need update setting
  set_fact:
    to_update_settings: "{{ (oidc_settings | settings_filter(current_sonar_settings.json.settings) | to_query_string) + (oidc_settings_secured | to_query_string) }}"

- name: Set invalid oidc settings
  ansible.builtin.uri:
    url: "https://{{ sonar_domain }}/api/settings/set?{{ item }}"
    user: "{{ token_pass }}"
    validate_certs: "{{ dsc.exposedCA.type == 'none' }}"
    force_basic_auth: true
    method: POST
    status_code: 204
  with_items: "{{ to_update_settings }}"
