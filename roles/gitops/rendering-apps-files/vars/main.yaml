values:
  argocd:
    configs: |
      rbac:
        scopes: "[groups]"
        policy.default: role:nada
        admin.enabled: "false"
        policy.csv: |
          p, role:admin, *, *, */*, allow
          p, role:nada, applicationsets, *, */*, deny
          p, role:nada, applications, *, */*, deny
          p, role:nada, logs, *, */*, deny
          p, role:nada, exec, *, */*, deny
          p, role:nada, certificates, *, *, deny
          p, role:nada, accounts, *, *, deny
          p, role:nada, gpgkeys, *, *, deny
          p, role:nada, projects, *, *, deny
          p, role:nada, clusters, *, *, deny
          p, role:nada, repositories, get, *, allow
          g, system:cluster-admins, role:admin
          g, cluster-admins, role:admin
          g, /admin, role:admin
          g, admin, role:admin

    cm: |
      resource.exclusions: |
        - apiGroups:
          - tekton.dev
          clusters:
          - '*'
          kinds:
          - TaskRun
          - PipelineRun
        - apiGroups:
          - wgpolicyk8s.io
          - aquasecurity.github.io
          clusters:
          - '*'
          kinds:
          - '*'
        - apiGroups:
          - postgresql.cnpg.io
          clusters:
          - '*'
          kinds:
          - Backup
        - apiGroups:
          - reports.kyverno.io
          clusters:
          - '*'
          kinds:
          - EphemeralReport
        - apiGroups:
          - reports.kyverno.io/v1
          clusters:
          - '*'
          kinds:
          - EphemeralReport
      oidc.config: |
        issuer: https://<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/common/values#domain | jsonPath {.keycloak}>/realms/dso
        requestedScopes: ["openid", "generic"]
        name: Keycloak
        clientID: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/keycloak/values#client | jsonPath {.argo.id}>
        clientSecret: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/keycloak/values#client | jsonPath {.argo.secret}>

    rootCA_block: |
      rootCA: |
        <path:{{ vaultinfra_kv_name }}/data/env/conf-dso/apps/common/values#exposedCa | indent 2>

    controller_metrics: |
      metrics:
        enabled: {{ dsc.global.metrics.enabled | lower }}
        serviceMonitor:
          enabled: {{ dsc.global.metrics.enabled | lower }}
          namespace: {{ dsc.argocd.namespace }}

    controller_metrics_labels: |
      labels: {{ dsc.global.metrics.additionalLabels | default('') }}

    controller_metrics_rules: |
      rules:
        enabled: true
        namespace: "{{ dsc.argocd.namespace }}"
        spec:
          - alert: Argo CD App Missing
            expr: |
              absent(argocd_app_info) == 1
            for: 15m
            labels:
              severity: critical
            annotations:
              summary: "[Argo CD] No reported applications"
              description: |
                Argo CD has not reported any applications data for the past 15 minutes which
                means that it must be down or not functioning properly. This needs to be
                resolved for this cloud to continue to maintain state.
          - alert: Argo CD App Not Synced
            expr: |
              argocd_app_info{sync_status!="Synced"} == 1
            for: 12h
            labels:
              severity: warning
            annotations:
              summary: Application not synchronized
              description: |
                Argo CD instance in namespace {{"{{"}} $labels.namespace {{"}}"}} : The application {{"{{"}} $labels.name {{"}}"}}
                in namespace {{"{{"}} $labels.dest_namespace {{"}}"}} has not been synchronized for over 12 hours,
                which means that the state of this cloud has drifted away from the state inside Git.

  keycloak:
    prometheusRule: |
      groups:
        - name: Keycloak
          rules:
            - alert: Keycloak instance not available
              annotations:
                message: Keycloak instance in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}} has not been available for the last 5 minutes.
                summary: Keycloak instance down (no ready container)
              expr: |
                (absent(kube_pod_container_status_ready{
                pod=~"{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                container="{{"{{"}} include "common.names.fullname" . {{"}}"}}",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"}) == 1)
                or sum(kube_pod_container_status_ready{
                pod=~"{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                container="{{"{{"}} include "common.names.fullname" . {{"}}"}}",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"}) == 0
              for: 5m
              labels:
                severity: critical
            - alert: Keycloak Pod not healthy
              annotations:
                message: Keycloak {{"{{`{{"}} $labels.pod {{"}}`}}"}} pod in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}} has been unavailable for the last 5 minutes.
                summary: Keycloak pod not healthy (container is not ready)
              expr: |
                kube_pod_container_status_ready{
                pod=~"{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                container="{{"{{"}} include "common.names.fullname" . {{"}}"}}",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"} == 0
              for: 5m
              labels:
                severity: warning
            - alert: Keycloak DB not available
              annotations:
                message: All Keycloak CNPG pods in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}} have been unavailable for the last 5 minutes.
                summary: Keycloak database down (containers not ready)
              expr: |
                (absent(kube_pod_container_status_ready{
                pod=~"pg-cluster-{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                container="postgres", namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"}) == 1)
                or sum(kube_pod_container_status_ready{
                pod=~"pg-cluster-{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                container="postgres", namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"}) == 0
              for: 5m
              labels:
                severity: critical
            - alert: Keycloak DB Pod not healthy
              annotations:
                message: Keycloak {{"{{`{{"}} $labels.pod {{"}}`}}"}} pod in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}} has been unavailable for the last 5 minutes.
                summary: Keycloak database pod not healthy (container is not ready)
              expr: |
                kube_pod_container_status_ready{
                container="postgres", namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"} == 0
              for: 5m
              labels:
                severity: warning
            - alert: Keycloak DB PVC has low remaining disk space
              annotations:
                message: PVC {{"{{`{{"}} $labels.persistentvolumeclaim {{"}}`}}"}} in namespace {{"{{`{{"}} $labels.namespace {{"}}`}}"}} is running out of disk space (< 20% left). VALUE = {{"{{`{{"}} $value {{"}}`}}"}}%
                summary: Keycloak CNPG PVC is running out of disk space in namespace {{"{{`{{"}} $labels.namespace {{"}}`}}"}}
              expr: |
                round(
                kubelet_volume_stats_available_bytes{
                persistentvolumeclaim=~"pg-cluster-keycloak-\\d+",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"}
                / kubelet_volume_stats_capacity_bytes{
                persistentvolumeclaim=~"pg-cluster-keycloak-\\d+",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"} * 100, 0.01) < 20 > 10
              for: 1m
              labels:
                severity: warning
            - alert: Keycloak DB PVC almost out of disk space
              annotations:
                message: PVC {{"{{`{{"}} $labels.persistentvolumeclaim {{"}}`}}"}} in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}} is almost full (< 10% left). VALUE = {{"{{`{{"}} $value {{"}}`}}"}}%
                summary: Keycloak CNPG PVC almost out of disk space in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}}
              expr: |
                round(
                kubelet_volume_stats_available_bytes{
                persistentvolumeclaim=~"pg-cluster-{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"}
                / kubelet_volume_stats_capacity_bytes{
                persistentvolumeclaim=~"pg-cluster-{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"} * 100, 0.01) < 10 > 0
              for: 1m
              labels:
                severity: critical
            - alert: Keycloak DB PVC out of disk space
              annotations:
                message: PVC {{"{{`{{"}} $labels.persistentvolumeclaim {{"}}`}}"}} in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}} is full (0% left).
                summary: Keycloak CNPG PVC out of disk space in namespace {{"{{"}} include "common.names.namespace" . {{"}}"}}
              expr: |
                kubelet_volume_stats_available_bytes{
                persistentvolumeclaim=~"pg-cluster-{{"{{"}} include "common.names.fullname" . {{"}}"}}-\\d+",
                namespace="{{"{{"}} include "common.names.namespace" . {{"}}"}}"} == 0
              for: 1m
              labels:
                severity: critical

  vault:
    raft_standalone_config: |
      config: |
        ui = true
        service_registration "kubernetes" {}
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          telemetry {
            unauthenticated_metrics_access = "false"
          }
        }
        storage "raft" {
          path = "/vault/data"
        }
        telemetry {
          prometheus_retention_time = "30s"
          disable_hostname = true
        }

    serverTelemetry: |
      serverTelemetry:
        prometheusRules:
          enabled: {{ (dsc.global.metrics.enabled or dsc.global.alerting.enabled) | lower }}
          rules:

    metrics_enabled_rules: |
      - alert: Vault is sealed
        annotations:
          message: Vault instance in namespace {{ dsc.vault.namespace }} is sealed.
          summary: Vault instance sealed
        expr: |
          max(1 + vault_core_unsealed{namespace="{{ dsc.vault.namespace }}"}) == 1
        for: 5m
        labels:
          severity: critical

    alerts_enabled_rules: |
      - alert: Vault instance not healthy
        annotations:
          message: Vault {{"{{"}} $labels.pod {{"}}"}} pod in namespace {{ dsc.vault.namespace }} is not healthy (sealed?). Check its logs.
          summary: Vault instance is not healthy (sealed?)
        expr: |
          up{job="{{ dsc.vault.namespace }}-internal",pod=~"(.*-)*vault(-.*)*"} == 0
        for: 5m
        labels:
          severity: warning
      - alert: Vault is not available
        annotations:
          message: Vault in namespace {{ dsc.vault.namespace }} has not been available for the last 5 minutes.
          summary: Vault is down (no ready container)
        expr: |
          (absent(kube_pod_container_status_ready{
          pod=~"(.*-)*vault(-.*)*",
          container="vault",
          namespace="{{ dsc.vault.namespace }}"}) == 1)
          or sum(kube_pod_container_status_ready{
          pod=~"(.*-)*vault(-.*)*",
          container="vault",
          namespace="{{ dsc.vault.namespace }}"}) == 0
        for: 5m
        labels:
          severity: critical
      - alert: Vault agent injector is not available
        annotations:
          message: Vault agent injector in namespace {{ dsc.vault.namespace }} has not been available for the last 5 minutes.
          summary: Vault agent injector is down (no ready container)
        expr: |
          (absent(kube_pod_container_status_ready{
          pod=~"(.*-)*vault(-.*)*",
          container="sidecar-injector",
          namespace="{{ dsc.vault.namespace }}"}) == 1)
          or sum(kube_pod_container_status_ready{
          pod=~"(.*-)*vault(-.*)*",
          container="sidecar-injector",
          namespace="{{ dsc.vault.namespace }}"}) == 0
        for: 5m
        labels:
          severity: critical
      - alert: Vault Pod not healthy
        annotations:
          message: Vault {{"{{"}} $labels.pod {{"}}"}} pod in namespace {{ dsc.vault.namespace }} has been unavailable for the last 5 minutes.
          summary: Vault pod not healthy (container is not ready)
        expr: |
          kube_pod_container_status_ready{
          pod!~"backup-utils-vault(-.*)*",
          namespace="{{ dsc.vault.namespace }}"} == 0
        for: 5m
        labels:
          severity: warning
      - alert: Vault PVC has low remaining disk space
        annotations:
          message: PVC {{"{{"}} $labels.persistentvolumeclaim {{"}}"}} in namespace {{"{{"}} $labels.namespace {{"}}"}} is running out of disk space (< 20% left). VALUE = {{"{{"}} $value {{"}}"}}%
          summary: Vault PVC is running out of disk space in namespace {{"{{"}} $labels.namespace {{"}}"}}
        expr: |
          round(
          kubelet_volume_stats_available_bytes{
          persistentvolumeclaim=~"(.*-)*vault(-.*)*",
          namespace="{{ dsc.vault.namespace }}"}
          / kubelet_volume_stats_capacity_bytes{
          persistentvolumeclaim=~"(.*-)*vault(-.*)*",
          namespace="{{ dsc.vault.namespace }}"} * 100, 0.01) < 20 > 10
        for: 1m
        labels:
          severity: warning
      - alert: Vault PVC almost out of disk space
        annotations:
          message: PVC {{"{{"}} $labels.persistentvolumeclaim {{"}}"}} in namespace {{ dsc.vault.namespace }} is almost full (< 10% left). VALUE = {{"{{"}} $value {{"}}"}}%
          summary: Vault PVC almost out of disk space in namespace {{ dsc.vault.namespace }}
        expr: |
          round(
          kubelet_volume_stats_available_bytes{
          persistentvolumeclaim=~"(.*-)*vault(-.*)*",
          namespace="{{ dsc.vault.namespace }}"}
          / kubelet_volume_stats_capacity_bytes{
          persistentvolumeclaim=~"(.*-)*vault(-.*)*",
          namespace="{{ dsc.vault.namespace }}"} * 100, 0.01) < 10 > 0
        for: 1m
        labels:
          severity: critical
      - alert: Vault PVC out of disk space
        annotations:
          message: PVC {{"{{"}} $labels.persistentvolumeclaim {{"}}"}} in namespace {{ dsc.vault.namespace }} is full (0% left).
          summary: Vault PVC out of disk space in namespace {{ dsc.vault.namespace }}
        expr: |
          kubelet_volume_stats_available_bytes{
          persistentvolumeclaim=~"(.*-)*vault(-.*)*",
          namespace="{{ dsc.vault.namespace }}"} == 0
        for: 1m
        labels:
          severity: critical
