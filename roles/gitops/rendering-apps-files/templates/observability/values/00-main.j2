observatorium:
  global:
    projects:
      console:
        envs:
          hprod:
            groups:
            - /admin
            - /admin
            tenants:
              hprod-dso: {}
          prod:
            groups:
            - /admin
            - /admin
            tenants:
              prod-dso: {}
        projectName: dso
        projectRepository:
          path: roles/gitops/rendering-apps-files/templates/dashboard
          url: https://github.com/cloud-pi-native/socle.git
  ingress:
    enabled: false
  api:
    loglevel: info
    config:
      # Default tenant config
      id: "{{ dsc.observatorium.apiConfig.id | default('') }}"
      name: "{{ dsc.observatorium.apiConfig.name | default('') }}"
      groups: [/admin]
      # Default oidc config
      clientID: "account"
      issuerURL: https://<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#domain | jsonPath {.keycloak}>/realms/{{ dsc.keycloak.applicationRealm }}
      usernameClaim: "preferred_username"
      groupClaim: "groups"
{% if dsc.exposedCA.type == "configmap" or dsc.exposedCA.type == "secret" %}
      customCA:
        enabled: true
        cert:  <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#exposedCa | base64encode>
{% endif %}
  logs:
    enabled: {{ dsc.global.logs.enabled | lower | default('') }}
    read:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.logs}>"
    tail:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.logs}>"
    write:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.logs}>"
    rules:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.logs}>"
  metrics:
    enabled: {{ dsc.global.metrics.enabled | lower | default('') }}
    tenantHeader: 'X-Scope-OrgId'
    read:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.metrics}>"
    alertmanager:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.metrics}>"
    write:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.metrics}>"
    rules:
      endpoint: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#endpoint | jsonPath {.metrics}>"
{% if dsc.observatorium.reverseProxy.enabled %}
  reverseProxy:
    enabled: true
    metricsHost: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#reverseProxyEndpoint | jsonPath {.metrics}>"
    logsHost: "<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#reverseProxyEndpoint | jsonPath {.logs}>"
{% endif %}
grafana:
  grafanaNamespace: "{{ dsc.grafana.namespace }}"
  default: {}
  oauth:
    enabled: true
    url: https://<path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#domain | jsonPath {.keycloak}>/realms/{{ dsc.keycloak.applicationRealm }}
    id: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/keycloak/values#client | jsonPath {.grafana.id}>
    secret: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/keycloak/values#client | jsonPath {.grafana.secret}>
    aud: grafana
    scopes: profile, email, openid, group
    groups_attribute_path: group
  server:
    certManager:
      enabled: true
    ingressClassName: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#ingressClassName>
    url: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#domain | jsonPath {.grafana}>
  grafana:
    adminPassword: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/observability/values#grafana| jsonPath {.adminPassword}>
    isOpenShift: {{ dsc.global.platform == "openshift" }}
    observatorium_url: http://{{ dsc.global.gitOps.envName }}-{{ dsc.observatorium.namespace }}-api.{{ dsc.observatorium.namespace }}.svc.cluster.local:8080
{% if dsc.proxy.enabled %}
    env:
    - name: HTTP_PROXY
      value: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#proxy | jsonPath {.httpProxy}>
    - name: HTTPS_PROXY
      value: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#proxy | jsonPath {.httpsProxy}>
    - name: NO_PROXY
      value: <path:{{ vaultinfra_kv_name }}/data/env/{{ dsc_name }}/apps/global/values#proxy | jsonPath {.noProxy}>
{% endif %}
  global:
    projects:
      console:
        envs:
          hprod:
            groups:
              - /admin
              - /admin
            tenants:
              hprod-dso: {}
          prod:
            groups:
              - /admin
              - /admin
            tenants:
              prod-dso: {}
        projectName: dso
        projectRepository:
          url: https://github.com/cloud-pi-native/socle.git
          path: roles/gitops/rendering-apps-files/templates/dashboard
